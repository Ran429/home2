// This schema is updated for the Human Vulnerability Research Institute website.
// It uses a generic 'Post' model to manage all content types (Type1, Type2, Type4).
//C:\Users\zeroj\klea-main\home\home2\prisma\schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")   // 런타임
  directUrl = env("DIRECT_URL")     // 마이그레이션/DDL
}

// A generic model for all content: pages, posts, gallery items, etc.
model Post {
  id            Int      @id @default(autoincrement())
  category      String
  slug          String   @unique
  contentType   String   @map("content_type")

  title         String
  content       String
  featuredImage Json?    @map("featured_image")
  images        Json?
  files         Json?

  viewCount     Int      @default(0) @map("view_count")
  isActive      Boolean  @default(true) @map("is_active")
  isImportant   Boolean  @default(false) @map("is_important")
  createdBy     String   @map("created_by")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@index([category, isActive])
  @@index([contentType, isActive])
  @@map("td_post")
}

//
// Board 모델 (공지사항, 갤러리, 입찰공고 등 여러 게시판 구분용)
//
model Board {
  id        Int      @id @default(autoincrement())
  boardType String
  title     String
  content   String
  images    Json?
  files     Json?

  viewCount Int      @default(0)
  isActive  Boolean  @default(true)
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([boardType, isActive])
  @@map("td_board")
}

//
// Partner 모델 (협력사/파트너 로고 관리)
//
model Partner {
  id          Int      @id @default(autoincrement())
  name        String
  logoImage   Json     @map("logo_image")
  link        String?
  description String?
  sortOrder   Int      @default(0) @map("sort_order")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@index([isActive, sortOrder])
  @@map("td_partner")
}

//
// 관리자 계정
//
model AdminAccount {
  id        Int      @id @default(autoincrement())
  userId    String   @unique @map("user_id")
  password  String
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("td_admin_account")
}

//
// 조직도/멤버
//
model Member {
  id        Int      @id @default(autoincrement())
  name      String
  role      String
  photoUrl  String?   @map("photo_url")
  bio       String?
  isActive  Boolean  @default(true) @map("is_active")
  sortOrder Int      @default(0)    @map("sort_order")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([isActive, sortOrder])
  @@map("td_member")
}